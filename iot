Experiment 2
Aim:To interface LED/Buzzer with Arduino/Raspberry Pi and write a program to turn ON LED for 1 sec after every 2 seconds.
Requirements:
    1. Standard 5mm LED
    2. One Resistor
    3. Arduino Uno microcontroller board (ATmega328p)
    4. Jumper wires
Procedure: 
Step 1: Open www.wokwi.com in browser and select “Arduino Uno” microcontroller.
Step 2: In the Simulation part, select the above list by clicking “+” symbol, which are specified in above requirements.
Step 3: By using jumper wires, Connect Anode (A-pin) of LED to digital pin 3 of Arduino microcontrollerthrough the resistor and Cathode (C-pin) of LED to ground.
Step 4: Write program in “sketch.ino”.
Program:
voidsetup() {
  // put your setup code here, to run once:
pinMode(3, OUTPUT);
}

voidloop() {
  // put your main code here, to run repeatedly:
digitalWrite(3,HIGH); //we can also write digitalWrite(3,1);
delay(1000);
digitalWrite(3,LOW);//we can also write digitalWrite(3,0);
delay(1000);
}
Output:LED will turn on for 1 sec after every 2 seconds by interfacing LED with Arduino.

Experiment 6
Aim: To interface Bluetooth with Arduino/Raspberry Pi and write a program to send sensor data to smartphone using Bluetooth.
Step 1: Open “MIT App Inventor” in Google Chrome
Step 2: Click on “Create Apps!” button
Step 3: Click on Projects.
Step 4: In drop down menu, select “Start new project”.
Step 5: Enter Project Name :“LED_Blink” and press on OK button.
Step 6: Select “Label” option in “User Interface” menu and drag it on to themobile screen image.
    I. Set Width is Fill Parent,
    II. TextAlignment is Center:1,
    III. Type “This App is made for Bluetooth base control” in Text box.
Step 7: Select “ListPicker” option in “User Interface” menuand drag it on to the mobile screen image.
    • Type “Connect to Device” in Text box.
Step 8: Select “Button” option in “User Interface” menu and drag it on to the mobile screen image.
    • Type “On” in Text box to change the text for Button1
Step 9: Select “Button” option again in “User Interface” menu and drag it on to the mobile screen image.
    • Type “Off” in Text box to change the text for Button2.
Step 10: Select “Label” option in “User Interface” menu and drag it on to the mobile screen image.
    • Type “Delete Everything” in Text box.
Step 11: Select “Clock” option in “Sensor” menu and drag it on to the mobile screen image
Step 12: Click on “Connectivity” option and select “BluetoothClient” option and drag it on to the mobile screen image.
    1. Click on “Blocks” button.
a)
    • click on “ListPicker1” option and select “when ListPicker1 .AfterPicking do”
    • click on “Control option” and select “if then” option.
    • click on “BluetoothClient1” and select “call BluetoothClient1 .Connect address” option.
    • click on “ListPicker1” and select “ListPicker1 . Selection” option.
    • click on “ListPicker1” and select “set ListPicker1 . Elements to” option.
    • click on BluetoothClient1” and select “BluetoothClient1 . AddressesAndNames” option.
b)
    • click on “ListPicker1” option and select “when ListPicker1 .BeforePicking do”
    • click on “ListPicker1” and select “set ListPicker1 . Elements to” option.
    • click on BluetoothClient1” and select “BluetoothClient1 . AddressesAndNames” option.
c)
    • click on “Button1” and select “when Button1 .Click do” option.
    • click on “BluetoothClient1” and select “call BluetoothClient1 .SenText text” option.
    • Click on “Text” option for select a “text String” and enter “1” into it.
d) Repeat above step and change it as “Button2” and set Text as 0.
e)
    • Click on “Clock1” and select “when Clock1 . Timer do”
    • Click on “Control” option for selecting “if then” option
    • Click on “BluetoothClient1” for selecting “BluetoothClient1 .IsConnected”
    • Click on “Label2” option for selecting “set Label2 . Text to”
    • Click on “BluetoothClient1” for selecting “call BluetoothClient1 .ReceiveTextnumberOfBytes” and “call BluetoothClient1 .BytesAvailableToReceive” option.


    Experiment 7
Aim:To interface Bluetooth with Arduino/Raspberry Pi and write a program to turn LED ON/OFF when ‘1’/’0’ is received from smartphone using Bluetooth
Step 1: Open “MIT App Inventor” in Google Chrome
Step 2: Click on “Create Apps!” button
Step 3:
Click on “Blocks” button.
a)
    • click on “ListPicker1” option and select “when ListPicker1 .AfterPicking do”
    • click on “Control option” and select “if then” option.
    • click on “BluetoothClient1” and select “call BluetoothClient1 .Connect address” option.
    • click on “ListPicker1” and select “ListPicker1 . Selection” option.
    • click on “ListPicker1” and select “set ListPicker1 . Elements to” option.
    • click on BluetoothClient1” and select “BluetoothClient1 . AddressesAndNames” option.
b)
    • click on “ListPicker1” option and select “when ListPicker1 .BeforePicking do”
    • click on “ListPicker1” and select “set ListPicker1 . Elements to” option.
    • click on BluetoothClient1” and select “BluetoothClient1 . AddressesAndNames” option.
c)
    • click on “Button1” and select “when Button1 .Click do” option.
    • click on “BluetoothClient1” and select “call BluetoothClient1 .SenText text” option.
    • Click on “Text” option for select a “text String” and enter “1” into it.
d)Repeat above step and change it as “Button2” and set Text as 0.
e)
    • Click on “Clock1” and select “when Clock1 . Timer do”
    • Click on “Control” option for selecting “if then” option
    • Click on “BluetoothClient1” for selecting “BluetoothClient1 .IsConnected”
    • Click on “Label2” option for selecting “set Label2 . Text to”
    • Click on “BluetoothClient1” for selecting “call BluetoothClient1 .ReceiveTextnumberOfBytes” and “call BluetoothClient1 .BytesAvailableToReceive” option.
Step 4: Click on “Build” and in drop down menu select “Andoid App (.apk)”
Step 5: Now QR Code will be generated.
Step 6: Click on the link which is generated through scanning QR Code in our mobile and install “LED_Blink”app.
Step 7: Now we can operate to turn LED ON/OFF when ‘1’/’0’ is received from smartphone using Bluetooth.